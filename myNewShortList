#include <iostream>
#include <vector> 
#include <algorithm>

using namespace std;

void printOutput(const vector<string> &);      //prints sorted output
vector<string> shortList(string[], int &size); //sorting function

int main()
{
    // int names_size;
    // cout << "How many names you wish to enter?" << endl;
    // cin >> names_size;
    // string names[names_size];
    // cout << "Input " << names_size << " names(in all lower-caps, press enter after each entry):" << endl;
    // for(int i=0; i<names_size; i++){
    //     cin >> names[i];
    // }
    
 ////For using User-Input names, Comment following array and Uncomment code above
    
    string names[7] = {"a","b","bab", "babe", "bebe"}; //Input Array of names
    
    int size = sizeof(names)/sizeof(names[0]);
    
    printOutput(shortList(names,size));
    
    return 0;
}

vector<string> shortList(string names[], int &size){
     std::vector<char> alphabets;   //vector stores alphabets from names
     std::vector<string> short_list;
     int dict = 0;     //dictionary counter

       for(int i=0; i<size; i++){
       int count = 0;    //local counter for alphabets in each name
       int state = 0;    //counter decides which names to be included in shortlist
       int unique = 0;   //counter for unique letters in a name; 
       int flag = 0; int update; int g_flag = 0;
       //scan through alphabets in each name:
       while(count < names[i].length()){                  
       //check if current alphabet exists in our alphabets vector, if doen't then add it
           if(std::find(alphabets.begin(), alphabets.end(), names[i][count]) == alphabets.end()) {
              alphabets.push_back(names[i][count]);
            } else {
              state++;
            }
            count++;
       }
       unique = names[i].length() - state;
       if(state >= dict){
           if(short_list.size() != 0){
               for(int j=0; j<alphabets.size(); j++){
                   flag = 0; count=0; update = 0;
                   while(count < (names[i].length())){
                       if(alphabets[j] != names[i][count]){
                           flag++;
                       }
                       count++;
                   }
                   if(flag > g_flag){
                       g_flag = flag;
                   }
                }
                if(g_flag == names[i].length()){
                    update = 1;
                } else {update = 0;}
                //cout << flag << endl;
                
                if(update != 1){
                    short_list.clear();
                    short_list.push_back(names[i]);          
                }
           } else {
                short_list.push_back(names[i]);
           }
       } else if (state < dict && unique != 0){
           short_list.push_back(names[i]);
       }
       
       dict = dict + unique;
    }
    return short_list;
}

void printOutput(const vector<string> &output){
    cout << "short-listed array of names:" << endl;
    for(int i=0; i<output.size(); i++){
        cout << output[i] << " ";
    }
}
